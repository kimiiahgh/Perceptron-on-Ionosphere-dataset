# -*- coding: utf-8 -*-
"""HW4.2_DL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iEkEXzcg7C8S-hE0JDrUxz2oqWc9Z9rg
"""

from pandas import read_csv
from matplotlib import pyplot
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import Perceptron
from sklearn.model_selection import train_test_split

url = 'https://raw.githubusercontent.com/jbrownlee/Datasets/master/ionosphere.csv'
#load the dataset
df = read_csv(url, header=None)

# show summary statistics
print(df.describe())
# plot histograms
df.hist()
pyplot.show()

X, y = df.values[:, :-1], df.values[:, -1]
X = X.astype('float32')
#encode to binary
y = LabelEncoder().fit_transform(y)
#split 
X_train1, X_test1, y_train1, y_test1 = train_test_split(X, y, test_size=0.50)
X_train2, X_test2, y_train2, y_test2 = train_test_split(X, y, test_size=0.80) #with less train data

model = Perceptron()
model.fit(X_train1, y_train1)
error_tr1=model.score(X_train1, y_train1)
error_te1=model.score(X_test1, y_test1)
print(error_tr1)
print(error_te1)

regularized_model = Perceptron(penalty='l2',alpha=0.5)
regularized_model.fit(X_train1, y_train1)
error_tr1_reg=regularized_model.score(X_train1, y_train1)
error_te1_reg=regularized_model.score(X_test1, y_test1)
print(error_tr1_reg)
print(error_te1_reg)

model2 = Perceptron()
model2.fit(X_train2, y_train2)
error_tr2=model2.score(X_train2, y_train2)
error_te2=model2.score(X_test2, y_test2)
print(error_tr2)
print(error_te2)
